=begin
 * freq_table .c/.h generator
 *
 * freq_table.rb
 *
 *
 * Copyright (c) 2013 sada.gussy (sada dot gussy at gmail dot com)
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
=end

HEADER_FILE = "freq_table.h"
SOURCE_FILE = "freq_table.c"

headers = <<EOD
/*
 * This code is automatically generated by freq_table.rb.
 */
EOD


name = %w[C Cp D Dp E F Fp G Gp A Ap B]
#------------------- Source code generation
source_file = ""
source_file += headers
source_file += <<EOD
const float freq_table[128] = {
EOD
(0..127).each do |i|
  hz = 440 * 2 ** ((i-69)/12.0)
  source_file += <<EOD
  #{hz},
EOD
end
source_file += <<EOD
};

EOD
(0..127).each do |i|
  source_file += <<EOD
const int key_#{name[i%12]}#{(i/12)} = #{i};
EOD

end
File.write(SOURCE_FILE, source_file)


#------------------- header code generation
header_file = ""
header_file += headers
header_file += <<EOD
#ifndef FREQ_TABLE_H
#define FREQ_TABLE_H

#ifdef __cplusplus
extern "C" {
#endif

extern const float freq_table[128];
EOD
(0..127).each do |i|
  header_file += <<EOD
extern const int key_#{name[i%12]}#{(i/12)};
EOD

end

header_file += <<EOD
#ifdef __cplusplus
}
#endif

#endif
EOD

File.write(HEADER_FILE, header_file)

